<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.wasdev.wlp.maven.parent</groupId>
        <artifactId>liberty-maven-app-parent</artifactId>
        <version>RELEASE</version>
    </parent>

    <groupId>lt.arminai.banking</groupId>
    <artifactId>money-transfer</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <warfile.name>moneyTransfer</warfile.name>

        <!-- Liberty Server -->
        <version.liberty>RELEASE</version.liberty>

        <!-- Dependencies -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <version.shared.keystore>0.0.1-SNAPSHOT</version.shared.keystore>

        <!-- Optional Microservice Configuration -->
        <backend.hostname>localhost</backend.hostname>
        <backend.http.port>5050</backend.http.port>
        <backend.https.port>5051</backend.https.port>

        <frontend.http.port>9090</frontend.http.port>
        <frontend.https.port>9091</frontend.https.port>
        <frontend.hostname>localhost</frontend.hostname>

        <!-- JSON Web Token used for microservice authorization -->
        <jwt.issuer>http://openliberty.io</jwt.issuer>
    </properties>

    <!-- Shared dependencies. -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.openliberty.features</groupId>
                <artifactId>features-bom</artifactId>
                <version>RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>lt.arminai.banking</groupId>
                <artifactId>resources</artifactId>
                <version>${version.shared.keystore}</version>
                <scope>test</scope>
            </dependency>
            <!-- Test -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>1.0.4</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>3.2.6</version>
                <scope>test</scope>
            </dependency>
            <!-- The following is necessary to read CXF client configuration -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>4.3.9.RELEASE</version>
                <scope>test</scope>
            </dependency>
            <!-- Support for JDK 9 and above -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>2.3.0.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>2.3.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- Shared plugins -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <compilerArgument>-XDignore.symbol.file</compilerArgument>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <attachClasses>true</attachClasses>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultSpecificationEntries>
                                    true
                                </addDefaultSpecificationEntries>
                                <addDefaultImplementationEntries>
                                    true
                                </addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                        <warName>${warfile.name}</warName>
                    </configuration>
                </plugin>

                <!-- Liberty server operations and management. -->
                <plugin>
                    <groupId>net.wasdev.wlp.maven.plugins</groupId>
                    <artifactId>liberty-maven-plugin</artifactId>
                    <configuration>
                        <assemblyArtifact>
                            <groupId>io.openliberty</groupId>
                            <artifactId>openliberty-runtime</artifactId>
                            <version>RELEASE</version>
                            <type>zip</type>
                        </assemblyArtifact>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <modules>
        <module>resources</module>
        <module>backendServices</module>
        <!--<module>frontend</module>-->
    </modules>
</project>