<server description="Sample Liberty server">

    <featureManager>
        <feature>jaxrs-2.1</feature>
        <feature>jsonp-1.1</feature>
        <feature>cdi-2.0</feature>
        <feature>jpa-2.2</feature>
        <feature>ssl-1.0</feature>
        <feature>mpJwt-1.1</feature>
    </featureManager>

    <applicationManager autoExpand="true"/>

    <mpMetrics authentication="false"/>

    <httpEndpoint host="*" httpPort="${default.http.port}" httpsPort="${default.https.port}" id="defaultHttpEndpoint"/>

    <webApplication location="money-transfer.war" contextRoot="/"/>

    <!-- H2 Library Configuration -->
    <library id="H2JDBCLib">
        <fileset dir="${shared.resource.dir}" includes="h2-1.4.199.jar"/>
    </library>

    <!-- Datasource Configuration -->
    <dataSource id="h2banking" jndiName="jdbc/h2banking">
        <jdbcDriver libraryRef="H2JDBCLib"/>
        <properties URL="jdbc:h2:mem:banking;INIT=RUNSCRIPT FROM 'classpath:create.sql'\;RUNSCRIPT FROM 'classpath:init.sql'"/>
    </dataSource>

    <!-- This is the keystore that will be used by SSL and by JWT.
         The keystore is built using the maven keytool plugin -->
    <keyStore id="defaultKeyStore" location="keystore.jceks" type="JCEKS"
              password="secret" />

    <!-- The MP JWT configuration that injects the caller's JWT into a
         ResourceScoped bean for inspection. -->
    <mpJwt id="jwtUserConsumer" keyName="default" audiences="bankingapp"
           issuer="${jwt.issuer}"/>
</server>
