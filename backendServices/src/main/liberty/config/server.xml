<server description="Backend server">
    <featureManager>
        <feature>jaxrs-2.1</feature>
        <feature>jsonp-1.1</feature>
        <feature>cdi-2.0</feature>
        <feature>jpa-2.2</feature>
        <feature>ssl-1.0</feature>
        <feature>mpJwt-1.1</feature>
        <feature>appSecurity-3.0</feature>
    </featureManager>

    <!-- This is the keystore that will be used by SSL and by JWT.
         The keystore is built using the maven keytool plugin -->
    <keyStore id="defaultKeyStore" location="keystore.jceks" type="JCEKS"
              password="secret" />

    <!-- The HTTP ports that the application will use. -->
    <httpEndpoint id="defaultHttpEndpoint" host="*" httpPort="${http.port}"
                  httpsPort="${https.port}"/>

    <!-- The application containing the user and login endpoints. -->
    <webApplication location="${app.name}" contextRoot="/" />

    <!-- H2 Library Configuration -->
    <library id="H2JDBCLib">
        <fileset dir="${shared.resource.dir}" includes="h2-1.4.199.jar"/>
    </library>

    <!-- Datasource Configuration -->
    <dataSource id="h2banking" jndiName="jdbc/h2banking">
        <jdbcDriver libraryRef="H2JDBCLib"/>
        <properties URL="jdbc:h2:mem:banking;INIT=RUNSCRIPT FROM 'classpath:create.sql'\;RUNSCRIPT FROM 'classpath:init.sql'"/>
    </dataSource>

    <!-- The MP JWT configuration that injects the caller's JWT into a
         ResourceScoped bean for inspection. -->
    <mpJwt id="jwtUserConsumer" keyName="default" audiences="simpleapp"
           issuer="${jwt.issuer}"/>

    <!-- This JWT builder is used to build a JWT for an authenticated user.
         JWTs generated by this builder contain
         the user name and roles of the authenticated user. -->
    <jwtBuilder id="jwtFrontEndBuilder" issuer="${jwt.issuer}" expiry="24h"
                keyAlias="default" audiences="simpleapp"/>
</server>
